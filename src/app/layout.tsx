import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import AuthProvider from "@/context/AuthProvider";
import { auth } from "@/app/api/auth/[...nextauth]/configs";
import ClientRootLayout from "./clientRootLayout";
import { Toaster } from "@/components/ui/sonner";
import { ReduxProvider } from "@/context/ReduxProvider";
import AuthSync from "@/components/auth-components/authSync";
import AuthUserSync from "@/components/auth-components/authUserSync";
import QueryProvider from "@/components/QueryProvider";
import { getUserData } from "./actions/getUserData";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "streamX - Enjoy the world",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await auth();
  const user = await getUserData();

  return (
    <html lang="en" suppressHydrationWarning>
      <AuthProvider session={session}>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <QueryProvider>
            <ClientRootLayout>
              <ReduxProvider>
                <AuthSync />
                {user && <AuthUserSync userInfo={user} />}
                {children}
              </ReduxProvider>
            </ClientRootLayout>
          </QueryProvider>
          <Toaster />
        </body>
      </AuthProvider>
    </html>
  );
}
